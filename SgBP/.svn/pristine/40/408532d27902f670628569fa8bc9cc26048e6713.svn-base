<?xml version="1.0" encoding="UTF-8"?>
<!--
	- Middle tier application context definition for the image database.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" 
    default-autowire="byName">

	<context:annotation-config />
	<context:component-scan base-package="com.gzepro.internal.query" />
	<context:property-placeholder location="classpath:config/spring/jdbc.properties" />

	<!-- 服务器连接池 -->
	<!--   JNDI 模式 
	 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
              <value>${jndi}</value>
		</property>
	</bean>
	-->
	<!--  JDBC模式  -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver">
			<value>${db.driver}</value>
		</property>
		<property name="driverUrl">
			<value>${db.url}</value>
		</property>
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="alias" value="mypro_dbname" />
		<property name="maximumActiveTime" value="300000" />
		<property name="prototypeCount" value="0" />
		<property name="maximumConnectionCount" value="50" />
		<property name="minimumConnectionCount" value="2" />
		<property name="simultaneousBuildThrottle" value="50" />
	</bean>
  
    <!-- 添加AnnotationSessionFactoryBean，提供注解注入支持 -->
    <bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
		
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" />
		<property name="lobHandler" ref="lobHandler"/>
		<property name="hibernateProperties">
			<props>
			    <prop key="hibernate.default_schema">${db.schema}</prop> 
				<prop key="hibernate.dialect">${db.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.query.factory_class">
                    org.hibernate.hql.ast.ASTQueryTranslatorFactory 
                </prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.gzepro.internal.query</value>
			</list>
		</property>
	</bean>

	<!-- ehcache Manager -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	   <property name="configLocation">
	     <value>classpath:config/spring/ehcache.xml</value>
	   </property>
	</bean>

	
	<!-- 可以在此配置Persistence和注解，某个实现类可以当作某个action的参数进行传递  -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
        
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
    <!--配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
   <!--那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="bussinessService" expression="execution(public * com.gzepro.internal.query.system.service.*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>
	
</beans>